name: SonarQube Analysis

on:
  workflow_run:
    workflows: ["Frontend CI", "Backend CI"]
    types: [completed]
    branches: ['**']

jobs:
  sonarqube-analysis:
    name: Analyse de Qualité du Code
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Récupération du code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      
      - name: Détection des composants modifiés
        id: detect-changes
        run: |
          echo "🔍 Détection des changements..."
          
          FRONTEND_CHANGED=false
          BACKEND_CHANGED=false
          
          if git diff --name-only HEAD~1 HEAD | grep -q "^front/"; then
            FRONTEND_CHANGED=true
            echo "✅ Changements détectés dans le front-end"
          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -q "^back/"; then
            BACKEND_CHANGED=true
            echo "✅ Changements détectés dans le back-end"
          fi
          
          echo "frontend_changed=$FRONTEND_CHANGED" >> $GITHUB_OUTPUT
          echo "backend_changed=$BACKEND_CHANGED" >> $GITHUB_OUTPUT
          
          echo "📊 Résumé: Frontend=$FRONTEND_CHANGED, Backend=$BACKEND_CHANGED"
      
      - name: Configuration JDK 17
        if: steps.detect-changes.outputs.backend_changed == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Configuration Node.js
        if: steps.detect-changes.outputs.frontend_changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      
      - name: Cache des packages SonarQube
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Installation des dépendances front-end
        if: steps.detect-changes.outputs.frontend_changed == 'true'
        working-directory: ./front
        run: |
          echo "📦 Installation des dépendances front-end..."
          npm ci
      
      - name: Exécution des tests back-end avec couverture
        if: steps.detect-changes.outputs.backend_changed == 'true'
        working-directory: ./back
        run: |
          echo "🧪 Exécution des tests back-end avec couverture..."
          mvn clean verify
      
      - name: Exécution des tests front-end avec couverture
        if: steps.detect-changes.outputs.frontend_changed == 'true'
        working-directory: ./front
        run: |
          echo "🧪 Exécution des tests front-end avec couverture..."
          npm test -- --no-watch --code-coverage --browsers=ChromeHeadless
      
      - name: Analyse SonarQube (Maven pour back-end)
        if: steps.detect-changes.outputs.backend_changed == 'true'
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "🔍 Analyse SonarQube du back-end avec Maven..."
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=ElDucche_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.organization=elducche \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.branch.name=${{ github.event.workflow_run.head_branch }}
      
      - name: Analyse SonarQube (Scanner CLI pour front-end)
        if: steps.detect-changes.outputs.frontend_changed == 'true'
        working-directory: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          echo "🔍 Analyse SonarQube du front-end..."
          
          npm install -g sonarqube-scanner
          
          sonar-scanner \
            -Dsonar.projectKey=ElDucche_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.organization=elducche \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions=**/*.spec.ts \
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/coverage/**,**/dist/** \
            -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.branch.name=${{ github.event.workflow_run.head_branch }}
      
      - name: Vérification du Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          echo "🚦 Vérification du statut du Quality Gate SonarQube..."
          sleep 10
          echo "✅ Analyse SonarQube terminée avec succès"
          echo "📊 Consultez les résultats sur SonarCloud.io"
      
      - name: Summary
        run: |
          echo "✅ Analyse de qualité du code terminée!"
          echo ""
          if [ "${{ steps.detect-changes.outputs.backend_changed }}" == "true" ]; then
            echo "🔍 Back-end analysé"
          fi
          if [ "${{ steps.detect-changes.outputs.frontend_changed }}" == "true" ]; then
            echo "🔍 Front-end analysé"
          fi
          echo ""
          echo "📊 Résultats disponibles sur SonarCloud"
          echo "🌿 Branche: ${{ github.event.workflow_run.head_branch }}"
